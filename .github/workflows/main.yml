name: NodeJS App CI/CD 

on:
  push:
    branches:
      - main

env:
  PROJECT_NUMBER: 987121777525
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  GAR_LOCATION: us-central1
  GKE_CLUSTER: ${{ vars.GKE_CLUSTER }}
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: nodejs-app-deploy
  REPOSITORY: clouddemo
  IMAGE: nodejs-app
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: 'actions/checkout@v4'

      - id: 'auth'
        name: Obtain access token by using workload identity federation
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          # project_id: ${{ env.PROJECT_ID }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: Login to Google Artifact Registry (GAR)
        uses: docker/login-action@v3
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'                                 
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and test
        uses: docker/build-push-action@v6
        with:
          target: test
          load: true

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          target: prod
          tags: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: 'auth'
        name: Obtain access token by using workload identity federation
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          location: '${{ env.GKE_ZONE }}'

      - name: 'deploy with gke-deploy cli'
        uses: 'google-github-actions/deploy-gke@v0.0.3'
        with:
          image: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}'
          app_name: '${{ env.DEPLOYMENT_NAME }}'
          region: '${{ env.GKE_ZONE }}'
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          namespace: 'myapp'
          expose: '3000'
          
      - name: 'get-deployments'
        shell: bash
        run: |
          kubectl get pods -n myapp
          kubectl get deployment -n myapp