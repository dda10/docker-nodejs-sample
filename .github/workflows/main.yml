name: NodeJS App CI/CD 

on:
  push:
    branches:
      - main

env:
  PROJECT_NUMBER: 987121777525
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  GAR_LOCATION: us-central1
  GKE_CLUSTER: ${{ vars.GKE_CLUSTER }}
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: nodejs-app-deploy
  REPOSITORY: clouddemo
  REPOSITORY_REGION: us-central1
  IMAGE: nodejs-app
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: 'actions/checkout@v4'

    # Use if want to push to Docker Hub
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ vars.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Build and test
      #   uses: docker/build-push-action@v6
      #   with:
      #     target: test
      #     load: true

      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     target: prod
      #     tags: ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

    
    # Use if want to push to Google Artifact Registry
      - name: Obtain access token by using workload identity federation
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Login to Google Artifact Registry (GAR)
        uses: docker/login-action@v3
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
      
      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # - name: Authenticate Google Artifact Registry (GAR)
      #   run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
    
      - name: 'Build and push Docker container'
        run: |-
          DOCKER_TAG="${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${IMAGE}:${GITHUB_SHA}"

          docker build \
            --tag "${DOCKER_TAG}" \
            --build-arg GITHUB_SHA="${GITHUB_SHA}" \
            --build-arg GITHUB_REF="${GITHUB_REF}" \
            .

          docker push "${DOCKER_TAG}"
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Set up Kustomize'
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.4.3/kustomize_v5.4.3_linux_amd64.tar.gz
          chmod +x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: 'Deploy to GKE'
        run: |-
          # replacing the image name in the k8s template
          ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide